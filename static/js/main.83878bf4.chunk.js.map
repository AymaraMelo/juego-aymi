{"version":3,"sources":["components/MathItem.js","components/Card.js","validations/colorValidation.js","components/Board.js","App.js","reportWebVitals.js","index.js"],"names":["Item","props","className","style","backgroundColor","colors","status","onClick","info","label","operation","selected","notSelected","ReactDOM","render","document","getElementById","Card","value","apply","delete","validColor","RegExp","Game","useState","cards","setCards","baseValue","setBaseValue","newValue","setNewValue","color","setColor","operationStatus","setOperationStatus","handleDeleteCard","newCards","filter","c","console","log","length","handleApply","newBaseValue","type","maxLength","defaultValue","onChange","event","test","handleColor","target","map","op","index","myOperation","newCard","handleCards","card","BoardGame","App","Board","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.83878bf4.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { useState } from 'react/cjs/react.development';\r\nimport '../App.css';\r\n\r\nfunction Item(props) {\r\n  return (\r\n    <button\r\n      key={props.operation}\r\n      className=\"mathItem\"\r\n      style={{ backgroundColor: colors[props.status] }}\r\n      onClick={() => props.onClick(props.info)}\r\n    >\r\n      {props.label}\r\n    </button>\r\n  );\r\n}\r\n\r\nconst colors = {\r\n  selected: '#00f2ff',\r\n  notSelected: '#3095ba',\r\n};\r\n\r\nReactDOM.render(<Item />, document.getElementById('root'));\r\n\r\nexport default Item;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '../App.css';\r\n\r\nfunction Card(props) {\r\n  return (\r\n    <div className=\"containerCard\">\r\n      <p className=\"textCard\">\r\n        {props.label} {props.value}\r\n      </p>\r\n      <div className=\"buttonsCardGroup\">\r\n        <button className=\"buttonCard\" onClick={() => props.apply(props.operation, props.value)}>\r\n          Apply\r\n        </button>\r\n        <button\r\n          className=\"buttonCard\"\r\n          onClick={() => props.delete(props.label, props.operation, props.value)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nReactDOM.render(<Card />, document.getElementById('root'));\r\n\r\nexport default Card;\r\n","export const validColor = new RegExp('^#+[a-f0-9]');\r\n","import React, { useEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '../App.css';\r\nimport Item from './MathItem';\r\nimport Card from './Card';\r\nimport { validColor } from '../validations/colorValidation';\r\n\r\nconst Game = () => {\r\n  const operations = [\r\n    { label: 'X', operation: '*' },\r\n    { label: '%', operation: '/' },\r\n    { label: '+', operation: '+' },\r\n    { label: '-', operation: '-' },\r\n  ];\r\n\r\n  const [cards, setCards] = useState([]);\r\n  const [baseValue, setBaseValue] = useState(10);\r\n  const [newValue, setNewValue] = useState(null);\r\n  const [color, setColor] = useState('#ffffff');\r\n  const [operationStatus, setOperationStatus] = useState({ label: '', operation: '' });\r\n\r\n  const handleCards = () => {\r\n    if (newValue && operationStatus) {\r\n      const newCard = {\r\n        label: operationStatus.label,\r\n        operation: operationStatus.operation,\r\n        value: newValue,\r\n      };\r\n      setCards([...cards, newCard]);\r\n    }\r\n  };\r\n\r\n  const handleDeleteCard = (label, operation, value) => {\r\n    const newCards = cards.filter(\r\n      (c) => label !== c.label && operation !== c.operation && value !== c.value,\r\n    );\r\n    console.log(newCards.length);\r\n    setCards(newCards);\r\n  };\r\n\r\n  const handleApply = (operation, value) => {\r\n    let newBaseValue;\r\n    switch (operation) {\r\n      case '+': {\r\n        newBaseValue = baseValue + value;\r\n        break;\r\n      }\r\n      case '-': {\r\n        newBaseValue = baseValue - value;\r\n        break;\r\n      }\r\n      case '*': {\r\n        newBaseValue = baseValue * value;\r\n        break;\r\n      }\r\n      case '/': {\r\n        newBaseValue = baseValue / value;\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n    if (newBaseValue >= 0) {\r\n      setBaseValue(+newBaseValue);\r\n    }\r\n  };\r\n\r\n  const handleSelectedOperation = (myOperation) => {\r\n    if (myOperation === operationStatus.label) {\r\n      return 'selected';\r\n    }\r\n    return 'notSelected';\r\n  };\r\n\r\n  const handleColor = (color) => {\r\n    if (validColor.test(color) && [...color].length === 7) {\r\n      setColor(color);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"containerGame\">\r\n      <div className=\"content\">\r\n        <input\r\n          className=\"inputColor\"\r\n          type=\"text\"\r\n          maxLength=\"7\"\r\n          defaultValue={color}\r\n          onChange={(event) => handleColor(event.target.value)}\r\n        ></input>\r\n        <h1 className=\"textTitle\" style={{ color: color }}>\r\n          El juego de Aymi\r\n        </h1>\r\n      </div>\r\n      <div className=\"content\">\r\n        {operations.map((op, index) => (\r\n          <Item\r\n            key={`${index}_${op.operation}`}\r\n            info={op}\r\n            label={op.label}\r\n            operation={op.operation}\r\n            onClick={setOperationStatus}\r\n            status={handleSelectedOperation(op.label)}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div className=\"content\">\r\n        <div className=\"buttonGroup\">\r\n          <input\r\n            className=\"input\"\r\n            type=\"number\"\r\n            onChange={(event) => setNewValue(+event.target.value)}\r\n          ></input>\r\n          <button className=\"addButton\" onClick={() => handleCards()}>\r\n            Add\r\n          </button>\r\n        </div>\r\n        <h1 className=\"textTitle\">{baseValue}</h1>\r\n      </div>\r\n      <div className=\"contentCards\">\r\n        {cards.map((card, index) => (\r\n          <Card\r\n            key={`${index}`}\r\n            label={card.label}\r\n            operation={card.operation}\r\n            value={card.value}\r\n            apply={handleApply}\r\n            delete={handleDeleteCard}\r\n          ></Card>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst BoardGame = () => {\r\n  return <Game key={1} />;\r\n};\r\n\r\nReactDOM.render(<BoardGame />, document.getElementById('root'));\r\n\r\nexport default BoardGame;\r\n","import React from 'react';\nimport './App.css';\nimport BoardGame from './components/Board';\n\nfunction App() {\n  return <BoardGame></BoardGame>;\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}